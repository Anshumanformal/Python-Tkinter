
# Importing libraries.
from tkinter import *
import webbrowser
from urllib.request import urlopen

root = Tk()
root.geometry("655x333")

# Different frames.
# Frame 1.
f1 = Frame(root, borderwidth=10, bg="#c31432", relief=GROOVE)
f1.pack(side=LEFT, fill="both")

# Button 1.
num = 1

#Invoked the message to display the source code.
def invokemessage():
    # Accessing the global variable 'num'.
    # Global variable was created outside of all functions without any keyword.
    # When we require to access the global variable, then we use the function global.
    global num
    if(num == 1): #Compared the variable with a constant value of 1.
        #URL for the content.
        #Demo URL.
        url = "https://raw.githubusercontent.com/Anshumanformal/Python-Tkinter/master/LICENSE"
        # Opened the url.
        f = urlopen(url)
        # Use the file reading method '.read()' to read the file as it is.
        myfile = f.read()
        #Increment num by 1.
        num += 1
        # Created scrollbar with parameter frame3(f3) before making the text widget.
        # The text widget parameter can also be passed to make the scrollbar.
        # But for that we need to maek the text widget before the scroll widget.
        # I didn't do all this because I needed  one simple line to add all attributes,
        # rather than using the .config() method.
        sb = Scrollbar(f3)
        #Packed the scrollbar.
        sb.pack(side=RIGHT, fill=Y)
        #Created the text widget with frame3(f3) and vertical scrolling command as parameters.
        #The vertical scrolling command is set to sb.set using the variable of scrollbar.
        text = Text(f3,yscrollcommand = sb.set)
        #Inserted 'myfile' contents to the text widget.
        text.insert(END,myfile)
        #Configuring scroll bar for using the command yview for text.
        sb.config(command = text.yview)

        #Calling the textEvent function where if denotes the 'ctrl + c' selection and else denotes other selections.
        #This function helps to copy text without editing the text.
        #If this function is removed, then the user can copy as well as
        #edit the text hence making changes in the text until the program is restarted.

        #Code snippet taken from - https://stackoverflow.com/a/45417036
        
        def textEvent(event):
            if (event.state == 12 and event.keysym == 'c'):
                return
            else:
                return "break"
        #Binding the key to the lambda function.
        text.bind("<Key>", lambda e: textEvent(e))
        #Packing the text.
        text.pack(fill="both", expand=TRUE)

b = Button(f1, text="Test1", command=invokemessage, font="verdana 16", activebackground="blue",
           activeforeground="yellow")
b.pack(pady=5)

# Button 2.
b = Button(f1, text="Test2", font="verdana 16", activebackground="blue", activeforeground="yellow")
b.pack(pady=5)

# Button 3.
b = Button(f1, text="Test3", font="verdana 16", activebackground="blue", activeforeground="yellow")
b.pack(pady=5)

# Frame 2.
f2 = Frame(root, borderwidth=10, bg="#5cd65c", relief=GROOVE)
f2.pack(side=TOP, fill="both")

# Button 1 for resume showing.
new = 1
url = "www.google.com"

def openresume():
    webbrowser.open(url, new=new)

b = Button(f2, text="RESUME", command=openresume, font="verdana 16", pady=22, activebackground="blue",
           activeforeground="yellow")
b.pack()

# Frame 3.
f3 = Frame(root, borderwidth=10, bg="#5cd65c", relief=GROOVE)

f3.pack(side=BOTTOM, fill="both", expand=TRUE)

root.mainloop()
